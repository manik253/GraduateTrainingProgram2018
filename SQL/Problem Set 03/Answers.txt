1.Find the titles of all movies directed by Steven Spielberg?
    sqlite>  select title from movie where director like 'Steven Spielberg';
E.T
Raiders of the Lost Ark
    
2.Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order?
 
sqlite>  select m.year,m.title from movie m join rating r on m.mid=r.mid and r.stars >=4 order by m.year asc;
1937|Snow White
1937|Snow White
1939|Gone with the Wind
1981|Raiders of the Lost Ark
1981|Raiders of the Lost Ark
2009|Avatar

3.Find the titles of all movies that have no ratings?
sqlite> select title from movie where mid not in (select distinct(mid) from rating);
Star Wars
Titanic

4.Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date 

sqlite> select r.name from reviewer r join rating rt on r.rid=rt.rid and rt.ratingdate is null;
Daniel Lewis
Chris Jackson

5.Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars?

sqlite> select r.name,m.title,rt.stars,rt.ratingdate from rating rt
   ...> join reviewer r on r.rid=rt.rid
   ...> join movie m on m.mid=rt.mid
   ...> order by r.name asc,m.title asc,rt.stars desc;
Ashley White|E.T.|3|2011-01-02
Brittany Harris|Raiders of the Lost Ark|4|2011-01-12
Brittany Harris|Raiders of the Lost Ark|2|2011-01-30
Brittany Harris|The Sound of Music|2|2011-01-20
Chris Jackson|E.T.|2|2011-01-22
Chris Jackson|Raiders of the Lost Ark|4|
Chris Jackson|The Sound of Music|3|2011-01-27
Daniel Lewis|Snow White|4|
Elizabeth Thomas|Avatar|3|2011-01-15
Elizabeth Thomas|Snow White|5|2011-01-19
James Cameron|Avatar|5|2011-01-20
Mike Anderson|Gone with the Wind|3|2011-01-09
Sarah Martinez|Gone with the Wind|4|2011-01-27
Sarah Martinez|Gone with the Wind|2|2011-01-22

6.For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, return the reviewer's name and the title of the movie?





7.For each movie that has at least one rating, find the highest number of 
stars that movie received. Return the movie title and number of stars. 
Sort by movie title?

SELECT m.title, max( rt.stars )  AS highest_star, count( rt.mid )  AS nuberofratings
FROM movie m
JOIN rating rt ON rt.mid = m.mid
GROUP  BY rt.mid
ORDER  BY m.title ASC

8.For each movie, return the title and the 'rating spread', that is, the 
difference between highest and lowest ratings given to that movie. Sort 
by rating spread from highest to lowest, then by movie title?

SELECT m.title, (max( rt.stars )  - min( rt.stars ) 
) AS ratingSpread
FROM movie m
JOIN rating rt ON rt.mid = m.mid
GROUP  BY rt.mid
ORDER  BY ratingSpread DESC , m.title ASC

9.Find the difference between the average rating of movies released before
 1980 and the average rating of movies released after 1980. (Make sure 
to calculate the average rating for each movie, then the average of 
those averages for movies before 1980 and movies after. Don't just 
calculate the overall average rating before and after 1980.)?




10.Find the names of all reviewers who rated Gone with the Wind?

SELECT  DISTINCT (r.name
)
FROM reviewer r
JOIN rating rt ON rt.rid = r.rid
JOIN movie m ON rt.mid = m.mid
WHERE rt.mid
IN (
SELECT mid
FROM movie
WHERE title =  'Gone with the Wind'
);

11.For any rating where the reviewer is the same as the director of the 
movie, return the reviewer name, movie title, and number of stars?

SELECT r.name, m.title, rt.stars
FROM reviewer r
JOIN rating rt ON rt.rid = r.rid
JOIN movie m ON m.mid = rt.mid
AND r.name = m.director

12.Return all reviewer names and movie names together in a single list, 
alphabetized. (Sorting by the first name of the reviewer and first word 
in the title is fine; no need for special processing on last names or 
removing "The".)?

SELECT r.name, m.title
FROM movie m
JOIN rating rt ON rt.mid = m.mid
JOIN reviewer r ON rt.rid = r.rid
ORDER  BY r.name ASC , m.title ASC

13.Find the titles of all movies not reviewed by Chris Jackson?

select m.title from movie m where m.mid not in ( select rt.mid from rating rt where rt.rid=(select r.rid from reviewer r where r.name='Chris Jackson'));
Gone with the Wind
Star Wars
Titanic
Snow White
Avatar

14.For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order?


15.15.For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars?

 select r.name,m.title,rt.stars from reviewer r
   ...> join rating rt on r.rid=rt.rid and rt.stars=(select min(stars) from rating)
   ...> join movie m on m.mid=rt.mid;
Sarah Martinez|Gone with the Wind|2
Brittany Harris|The Sound of Music|2
Brittany Harris|Raiders of the Lost Ark|2
Chris Jackson|E.T.|2

16.List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order?

sqlite> select m.title,avg(rt.stars) as average from movie m
   ...> join rating rt on m.mid=rt.mid  group by m.mid order by average desc,m.title asc;
Snow White|4.5
Avatar|4.0
Raiders of the Lost Ark|3.33333333333333
Gone with the Wind|3.0
E.T.|2.5
The Sound of Music|2.5

17.Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT?

sqlite> select r.name from reviewer r
   ...> join rating rt on r.rid=rt.rid group by rt.rid having count(rt.rid)>=3;
Brittany Harris
Chris Jackson

18.Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with and without COUNT?

select director,title from movie where director in (select director from movie group by director having count(director)>1) order by director,title;
James Cameron|Avatar
James Cameron|Titanic
Steven Spielberg|E.T.
Steven Spielberg|Raiders of the Lost Ark

19.Find the movie(s) with the highest average rating. Return the movie title(s) and average rating.
 (Hint: This query is more difficult to write in SQLite than other systems; you might think of it as finding the highest average rating and then choosing the movie(s) with that average rating.) 

select MID,title,max(star) from(select title,rate.mId as MID,avg(stars) as star from Movie mov inner join Rating rate on mov.mId=rate.mId group by rate.mId);


20.Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating. 
(Hint: This query may be more difficult to write in SQLite than other systems;
 you might think of it as finding the lowest average rating and then choosing the movie(s) with that average rating.) 

select MID,title,min(star) from(select title,rate.mId as MID,avg(stars) as star from Movie mov inner join Rating rate on mov.mId=rate.mId group by rate.mId);


21.For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating.
Ignore movies whose director is NULL. (1 point possible)

select director,title,max(stars) from Movie m inner join Rating r on m.mId=r.mId and director is NOT NULL group by r.mId;







